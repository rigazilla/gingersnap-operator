// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CacheSpecApplyConfiguration represents an declarative configuration of the CacheSpec type for use
// with apply.
type CacheSpecApplyConfiguration struct {
	Resources  *ResourcesApplyConfiguration      `json:"resources,omitempty"`
	DataSource *DataSourceSpecApplyConfiguration `json:"dataSource,omitempty"`
}

// CacheSpecApplyConfiguration constructs an declarative configuration of the CacheSpec type for use with
// apply.
func CacheSpec() *CacheSpecApplyConfiguration {
	return &CacheSpecApplyConfiguration{}
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *CacheSpecApplyConfiguration) WithResources(value *ResourcesApplyConfiguration) *CacheSpecApplyConfiguration {
	b.Resources = value
	return b
}

// WithDataSource sets the DataSource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DataSource field is set to the value of the last call.
func (b *CacheSpecApplyConfiguration) WithDataSource(value *DataSourceSpecApplyConfiguration) *CacheSpecApplyConfiguration {
	b.DataSource = value
	return b
}
